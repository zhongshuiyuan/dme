<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dist.Dme.WebApi</name>
    </assembly>
    <members>
        <member name="T:Dist.Dme.WebApi.Controllers.AlgorithmController">
            <summary>
            算法服务
            </summary>
        </member>
        <member name="P:Dist.Dme.WebApi.Controllers.AlgorithmController.AlgorithmService">
            <summary>
            算法服务
            </summary>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.AlgorithmController.ListAlgorithm(System.Int32)">
            <summary>
            获取所有算法。
            </summary>
            <param name="needMeta">是否获取算法的参数信息。0：表示否；1：表示是</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.AlgorithmController.ListAlgorithmMetadatasLocal">
            <summary>
            获取本地DLL算法元数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.AlgorithmController.RegistryAlgorithm(Dist.Dme.Model.DTO.AlgorithmAddReqDTO)">
            <summary>
            注册算法
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.AlgorithmController.RegistryAlgorithmFromLocal(System.String)">
            <summary>
            注册本地算法（从本地DLL获取）
            </summary>
            <param name="algCode">算法唯一编码。输入为空，说明是遍历全部</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.AlgorithmController.ListAlgorithmType">
            <summary>
            算法开发平台类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.AlgorithmController.ExecuteAlgorithm(System.String,Dist.Dme.Model.DTO.BaseRequestDTO)">
            <summary>
            算法的执行器，需要注入算法的参数
            </summary>
            <param name="algCode">算法唯一编码</param>
            <param name="dto">参数信息值，键值对格式</param>
            <returns></returns>
        </member>
        <member name="T:Dist.Dme.WebApi.Controllers.Base.BaseController">
            <summary>
            WebApiExceptionFilterAttribute：统一处理异常信息
            </summary>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.Base.BaseController.GetHeaderValue(System.String,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获得Header
            </summary>
            <param name="key">Header的键</param>
            <returns>获得的值, 获取失败返回null</returns>
            <param name="request">Request对象, 在Requst还没有初始化的时候需要手动传入, 相反则无需传, 如在过滤器里面, 需要传此参数, 否则只会永远返回null, 传了此参数, 会优先使用此参数</param>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.Base.BaseController.QueryString(System.String,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获得Get请求参数
            </summary>
            <param name="key">参数名称</param>
            <param name="request">Request对象, 在Requst还没有初始化的时候需要手动传入, 相反则无需传, 如在过滤器里面, 需要传此参数, 否则只会永远返回null, 传了此参数, 会优先使用此参数</param>
            <returns>获得的值, 获取失败返回null</returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.Base.BaseController.Form(System.String,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获得Post请求参数
            </summary>
            <param name="key">参数名称</param>
            <param name="request">Request对象, 在Requst还没有初始化的时候需要手动传入, 相反则无需传, 如在过滤器里面, 需要传此参数, 否则只会永远返回null, 传了此参数, 会优先使用此参数</param>
            <returns>获得的值, 获取失败返回null</returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.Base.BaseController.Success(System.Object)">
            <summary>
            成功
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.Base.BaseController.Success(System.Object,System.String)">
            <summary>
            成功
            </summary>
            <param name="data"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.Base.BaseController.Fail(System.Object)">
            <summary>
            失败
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.Base.BaseController.Fail(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.Base.BaseController.Error(System.Object)">
            <summary>
            错误
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.Base.BaseController.Error(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Dist.Dme.WebApi.Controllers.CacheController">
            <summary>
            数据源服务
            </summary>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.CacheController.#ctor(Dist.Dme.DisCache.Interfaces.ICacheService)">
            <summary>
            自动注入（DI）
            </summary>
            <param name="cacheService"></param>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.CacheController.AddCache(System.Object)">
            <summary>
            添加缓存
            </summary>
            <param name="keyValuePair">使用动态类型dynamic，传过来是个json字符串，键值对</param>
            <returns></returns>
            需要使用FromBody
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.CacheController.GetCache(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Dist.Dme.WebApi.Controllers.DataSourcesController">
            <summary>
            数据源服务
            </summary>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.DataSourcesController.ListDatabaseTypes">
            <summary>
            获取所有数据源类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.DataSourcesController.GetDatabaseType(System.Int32)">
            <summary>
            获取具体某个数据源类型
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.DataSourcesController.ListRegisteredDataSources">
            <summary>
            获取已注册的数据源
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.DataSourcesController.GetDatasourceConnMeta(System.String)">
            <summary>
            获取数据源连接的元数据信息
            </summary>
            <param name="typeCode">数据源类型编码，如：oracle</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.DataSourcesController.RegistryDataSource(Dist.Dme.Model.DTO.DatasourceAddDTO)">
            <summary>
            注册数据源
            </summary>
            <param name="dto">数据源元数据信息</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.DataSourcesController.CheckConnectionValid(Dist.Dme.Model.DTO.DataSourceConnDTO)">
            <summary>
            验证连接是否有效
            </summary>
            <param name="dto"></param>
            <returns>true/false</returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.MessageController.StartListen(System.String)">
            <summary>
            开启监听
            </summary>
            <param name="topic"></param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.MessageController.StopListen(System.String)">
            <summary>
            停止监听
            </summary>
            <param name="topic"></param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.MessageController.SendMsg(System.String,System.String)">
            <summary>
            发送消息
            </summary>
            <param name="topic">主题</param>
            <param name="msg">消息体</param>
            <returns></returns>
        </member>
        <member name="T:Dist.Dme.WebApi.Controllers.ModelsController">
            <summary>
            模型服务
            </summary>
        </member>
        <member name="P:Dist.Dme.WebApi.Controllers.ModelsController.ModelService">
            <summary>
            模型服务
            </summary>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.ListModels(System.Int32,System.Int32)">
            <summary>
            获取所有模型
            </summary>
            <param name="detail">是否获取详情信息，0：否；1：是</param>
            <param name="isPublish">是否被发布的模型，1：已发布；0：未发布；-1：全部</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.GetModel(System.String,System.Int32)">
            <summary>
            根据模型唯一编码获取模型
            </summary>
            <param name="code">模型唯一编码</param>
            <param name="detail">是否获取详情，0：否；1：是</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.ListRuleStepTypes">
            <summary>
            获取所有的规则步骤类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.GetLandConflictMetadata">
            <summary>
            获取用地冲突分析元数据信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.LandConflictExecute(Dist.Dme.Algorithms.LandConflictDetection.DTO.LandConflictReqDTO)">
            <summary>
            用地冲突分析计算
            </summary>
            <param name="dto">参数输入</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.OverlayExecute(Dist.Dme.Algorithms.Overlay.DTO.OverlayReqDTO)">
            <summary>
            叠加分析计算
            </summary>
            <param name="dto">参数输入</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.Run(System.String)">
            <summary>
            运行模型计算
            </summary>
            <param name="modelVersionCode">模型版本唯一编码</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.NewModelSimple(Dist.Dme.Model.DTO.ModelAddReqDTO)">
            <summary>
            模型注册
            </summary>
            <param name="dto">参数模型，当SysCode为空时，系统会自动附上一个唯一编码</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.CopyFromModelVersion(System.String)">
            <summary>
            根据模型版本进行复制
            </summary>
            <param name="modelVersionCode">模型版本唯一编码</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.SaveRuleStepInfos(Dist.Dme.Model.DTO.ModelRuleStepInfoDTO)">
            <summary>
            保存整个模型的规则步骤信息
            </summary>
            <param name="info">步骤信息</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.ListTask">
            <summary>
            获取任务清单，以创建时间倒序
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.GetTaskOutput(System.String)">
            <summary>
            获取任务的所有步骤计算结果
            </summary>
            <param name="taskCode">任务唯一编码</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.GetTaskOutput(System.String,System.Int32)">
            <summary>
            获取任务指定步骤的计算结果
            </summary>
            <param name="taskCode">任务编码</param>
            <param name="ruleStepId">步骤id，若传入-1，表示获取所有步骤的计算结果</param>
            <returns></returns>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.ModelsController.PublishModel(System.String,System.Int32)">
            <summary>
            设置模型的发布状态
            </summary>
            <param name="modelCode">模型唯一编码</param>
            <param name="isPublish">是否发布，1：发布：0：取消发布</param>
            <returns></returns>
        </member>
        <member name="T:Dist.Dme.WebApi.Controllers.UsersController">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.UsersController.#ctor(Dist.Dme.Service.Interfaces.IUserService)">
            <summary>
            自动注入（DI）
            </summary>
            <param name="userService"></param>
        </member>
        <member name="M:Dist.Dme.WebApi.Controllers.UsersController.ListUsers">
            <summary>
            获取用户列表
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
